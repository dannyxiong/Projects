package com.cooksys.fbws.hibernate;
// Generated Jul 9, 2015 2:35:58 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    ,catalog="fakebook"
    , uniqueConstraints = @UniqueConstraint(columnNames="username") 
)
public class Users  implements java.io.Serializable {


     private Integer userId;
     private String username;
     private String password;
     private String firstName;
     private String lastName;
     private Date registeredDate;
     private int active;
     private Set<Ignores> ignoresesForIgnoredUserId = new HashSet<Ignores>(0);
     private Set<WallPosts> wallPostsesForUserId = new HashSet<WallPosts>(0);
     private Set<Pages> pageses = new HashSet<Pages>(0);
     private Set<FriendRequests> friendRequestsesForUserId = new HashSet<FriendRequests>(0);
     private Set<PageWallPosts> pageWallPostses = new HashSet<PageWallPosts>(0);
     private Set<Friends> friendsesForUserId = new HashSet<Friends>(0);
     private Set<FriendRequests> friendRequestsesForFriendId = new HashSet<FriendRequests>(0);
     private Set<WallPostLikes> wallPostLikeses = new HashSet<WallPostLikes>(0);
     private Set<Friends> friendsesForFriendId = new HashSet<Friends>(0);
     private Set<Ignores> ignoresesForUserId = new HashSet<Ignores>(0);
     private Set<WallPosts> wallPostsesForFriendId = new HashSet<WallPosts>(0);
     private Set<Likes> likeses = new HashSet<Likes>(0);

    public Users() {
    }

	
    public Users(String username, String password, String firstName, String lastName, Date registeredDate, int active) {
        this.username = username;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.registeredDate = registeredDate;
        this.active = active;
    }
    public Users(String username, String password, String firstName, String lastName, Date registeredDate, int active, Set<Ignores> ignoresesForIgnoredUserId, Set<WallPosts> wallPostsesForUserId, Set<Pages> pageses, Set<FriendRequests> friendRequestsesForUserId, Set<PageWallPosts> pageWallPostses, Set<Friends> friendsesForUserId, Set<FriendRequests> friendRequestsesForFriendId, Set<WallPostLikes> wallPostLikeses, Set<Friends> friendsesForFriendId, Set<Ignores> ignoresesForUserId, Set<WallPosts> wallPostsesForFriendId, Set<Likes> likeses) {
       this.username = username;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.registeredDate = registeredDate;
       this.active = active;
       this.ignoresesForIgnoredUserId = ignoresesForIgnoredUserId;
       this.wallPostsesForUserId = wallPostsesForUserId;
       this.pageses = pageses;
       this.friendRequestsesForUserId = friendRequestsesForUserId;
       this.pageWallPostses = pageWallPostses;
       this.friendsesForUserId = friendsesForUserId;
       this.friendRequestsesForFriendId = friendRequestsesForFriendId;
       this.wallPostLikeses = wallPostLikeses;
       this.friendsesForFriendId = friendsesForFriendId;
       this.ignoresesForUserId = ignoresesForUserId;
       this.wallPostsesForFriendId = wallPostsesForFriendId;
       this.likeses = likeses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="user_id", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    
    @Column(name="username", unique=true, nullable=false, length=45)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="first_name", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="registered_date", nullable=false, length=19)
    public Date getRegisteredDate() {
        return this.registeredDate;
    }
    
    public void setRegisteredDate(Date registeredDate) {
        this.registeredDate = registeredDate;
    }

    
    @Column(name="active", nullable=false)
    public int getActive() {
        return this.active;
    }
    
    public void setActive(int active) {
        this.active = active;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByIgnoredUserId")
    public Set<Ignores> getIgnoresesForIgnoredUserId() {
        return this.ignoresesForIgnoredUserId;
    }
    
    public void setIgnoresesForIgnoredUserId(Set<Ignores> ignoresesForIgnoredUserId) {
        this.ignoresesForIgnoredUserId = ignoresesForIgnoredUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByUserId")
    public Set<WallPosts> getWallPostsesForUserId() {
        return this.wallPostsesForUserId;
    }
    
    public void setWallPostsesForUserId(Set<WallPosts> wallPostsesForUserId) {
        this.wallPostsesForUserId = wallPostsesForUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Pages> getPageses() {
        return this.pageses;
    }
    
    public void setPageses(Set<Pages> pageses) {
        this.pageses = pageses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByUserId")
    public Set<FriendRequests> getFriendRequestsesForUserId() {
        return this.friendRequestsesForUserId;
    }
    
    public void setFriendRequestsesForUserId(Set<FriendRequests> friendRequestsesForUserId) {
        this.friendRequestsesForUserId = friendRequestsesForUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<PageWallPosts> getPageWallPostses() {
        return this.pageWallPostses;
    }
    
    public void setPageWallPostses(Set<PageWallPosts> pageWallPostses) {
        this.pageWallPostses = pageWallPostses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByUserId")
    public Set<Friends> getFriendsesForUserId() {
        return this.friendsesForUserId;
    }
    
    public void setFriendsesForUserId(Set<Friends> friendsesForUserId) {
        this.friendsesForUserId = friendsesForUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByFriendId")
    public Set<FriendRequests> getFriendRequestsesForFriendId() {
        return this.friendRequestsesForFriendId;
    }
    
    public void setFriendRequestsesForFriendId(Set<FriendRequests> friendRequestsesForFriendId) {
        this.friendRequestsesForFriendId = friendRequestsesForFriendId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<WallPostLikes> getWallPostLikeses() {
        return this.wallPostLikeses;
    }
    
    public void setWallPostLikeses(Set<WallPostLikes> wallPostLikeses) {
        this.wallPostLikeses = wallPostLikeses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByFriendId")
    public Set<Friends> getFriendsesForFriendId() {
        return this.friendsesForFriendId;
    }
    
    public void setFriendsesForFriendId(Set<Friends> friendsesForFriendId) {
        this.friendsesForFriendId = friendsesForFriendId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByUserId")
    public Set<Ignores> getIgnoresesForUserId() {
        return this.ignoresesForUserId;
    }
    
    public void setIgnoresesForUserId(Set<Ignores> ignoresesForUserId) {
        this.ignoresesForUserId = ignoresesForUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByFriendId")
    public Set<WallPosts> getWallPostsesForFriendId() {
        return this.wallPostsesForFriendId;
    }
    
    public void setWallPostsesForFriendId(Set<WallPosts> wallPostsesForFriendId) {
        this.wallPostsesForFriendId = wallPostsesForFriendId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Likes> getLikeses() {
        return this.likeses;
    }
    
    public void setLikeses(Set<Likes> likeses) {
        this.likeses = likeses;
    }




}


