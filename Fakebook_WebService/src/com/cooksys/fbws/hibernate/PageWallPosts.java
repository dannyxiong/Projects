package com.cooksys.fbws.hibernate;
// Generated Jul 9, 2015 2:35:58 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PageWallPosts generated by hbm2java
 */
@Entity
@Table(name="page_wall_posts"
    ,catalog="fakebook"
)
public class PageWallPosts  implements java.io.Serializable {


     private PageWallPostsId id;
     private Pages pagesByPageId;
     private Users users;
     private Pages pagesByOtherId;
     private String message;
     private Date postedDate;
     private int active;

    public PageWallPosts() {
    }

	
    public PageWallPosts(PageWallPostsId id, Pages pagesByPageId, Date postedDate, int active) {
        this.id = id;
        this.pagesByPageId = pagesByPageId;
        this.postedDate = postedDate;
        this.active = active;
    }
    public PageWallPosts(PageWallPostsId id, Pages pagesByPageId, Users users, Pages pagesByOtherId, String message, Date postedDate, int active) {
       this.id = id;
       this.pagesByPageId = pagesByPageId;
       this.users = users;
       this.pagesByOtherId = pagesByOtherId;
       this.message = message;
       this.postedDate = postedDate;
       this.active = active;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="pageWallPostId", column=@Column(name="page_wall_post_id", nullable=false) ), 
        @AttributeOverride(name="pageId", column=@Column(name="page_id", nullable=false) ) } )
    public PageWallPostsId getId() {
        return this.id;
    }
    
    public void setId(PageWallPostsId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="page_id", nullable=false, insertable=false, updatable=false)
    public Pages getPagesByPageId() {
        return this.pagesByPageId;
    }
    
    public void setPagesByPageId(Pages pagesByPageId) {
        this.pagesByPageId = pagesByPageId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="other_id")
    public Pages getPagesByOtherId() {
        return this.pagesByOtherId;
    }
    
    public void setPagesByOtherId(Pages pagesByOtherId) {
        this.pagesByOtherId = pagesByOtherId;
    }

    
    @Column(name="message", length=1024)
    public String getMessage() {
        return this.message;
    }
    
    public void setMessage(String message) {
        this.message = message;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="posted_date", nullable=false, length=19)
    public Date getPostedDate() {
        return this.postedDate;
    }
    
    public void setPostedDate(Date postedDate) {
        this.postedDate = postedDate;
    }

    
    @Column(name="active", nullable=false)
    public int getActive() {
        return this.active;
    }
    
    public void setActive(int active) {
        this.active = active;
    }




}


